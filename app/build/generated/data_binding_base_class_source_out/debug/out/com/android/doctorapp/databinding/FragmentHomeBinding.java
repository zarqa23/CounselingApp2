// Generated by view binder compiler. Do not edit!
package com.android.doctorapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.VideoView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.doctorapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout appointArea;

  @NonNull
  public final TextView appointSelector;

  @NonNull
  public final LinearLayout mediaArea;

  @NonNull
  public final TextView mediaSelector;

  @NonNull
  public final TextView noProviders;

  @NonNull
  public final ImageView play;

  @NonNull
  public final ImageView play2;

  @NonNull
  public final ImageView play3;

  @NonNull
  public final CardView providersProfileArea;

  @NonNull
  public final RecyclerView providersRecycView;

  @NonNull
  public final ImageView userImage;

  @NonNull
  public final TextView userName;

  @NonNull
  public final GeneralToolbarBinding usersProfileArea;

  @NonNull
  public final RelativeLayout videoContainer1;

  @NonNull
  public final RelativeLayout videoContainer2;

  @NonNull
  public final RelativeLayout videoContainer3;

  @NonNull
  public final ImageView videoThumbnail1;

  @NonNull
  public final ImageView videoThumbnail2;

  @NonNull
  public final ImageView videoThumbnail3;

  @NonNull
  public final VideoView videoView1;

  @NonNull
  public final VideoView videoView2;

  @NonNull
  public final VideoView videoView3;

  private FragmentHomeBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout appointArea,
      @NonNull TextView appointSelector, @NonNull LinearLayout mediaArea,
      @NonNull TextView mediaSelector, @NonNull TextView noProviders, @NonNull ImageView play,
      @NonNull ImageView play2, @NonNull ImageView play3, @NonNull CardView providersProfileArea,
      @NonNull RecyclerView providersRecycView, @NonNull ImageView userImage,
      @NonNull TextView userName, @NonNull GeneralToolbarBinding usersProfileArea,
      @NonNull RelativeLayout videoContainer1, @NonNull RelativeLayout videoContainer2,
      @NonNull RelativeLayout videoContainer3, @NonNull ImageView videoThumbnail1,
      @NonNull ImageView videoThumbnail2, @NonNull ImageView videoThumbnail3,
      @NonNull VideoView videoView1, @NonNull VideoView videoView2, @NonNull VideoView videoView3) {
    this.rootView = rootView;
    this.appointArea = appointArea;
    this.appointSelector = appointSelector;
    this.mediaArea = mediaArea;
    this.mediaSelector = mediaSelector;
    this.noProviders = noProviders;
    this.play = play;
    this.play2 = play2;
    this.play3 = play3;
    this.providersProfileArea = providersProfileArea;
    this.providersRecycView = providersRecycView;
    this.userImage = userImage;
    this.userName = userName;
    this.usersProfileArea = usersProfileArea;
    this.videoContainer1 = videoContainer1;
    this.videoContainer2 = videoContainer2;
    this.videoContainer3 = videoContainer3;
    this.videoThumbnail1 = videoThumbnail1;
    this.videoThumbnail2 = videoThumbnail2;
    this.videoThumbnail3 = videoThumbnail3;
    this.videoView1 = videoView1;
    this.videoView2 = videoView2;
    this.videoView3 = videoView3;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appointArea;
      LinearLayout appointArea = ViewBindings.findChildViewById(rootView, id);
      if (appointArea == null) {
        break missingId;
      }

      id = R.id.appointSelector;
      TextView appointSelector = ViewBindings.findChildViewById(rootView, id);
      if (appointSelector == null) {
        break missingId;
      }

      id = R.id.mediaArea;
      LinearLayout mediaArea = ViewBindings.findChildViewById(rootView, id);
      if (mediaArea == null) {
        break missingId;
      }

      id = R.id.mediaSelector;
      TextView mediaSelector = ViewBindings.findChildViewById(rootView, id);
      if (mediaSelector == null) {
        break missingId;
      }

      id = R.id.noProviders;
      TextView noProviders = ViewBindings.findChildViewById(rootView, id);
      if (noProviders == null) {
        break missingId;
      }

      id = R.id.play;
      ImageView play = ViewBindings.findChildViewById(rootView, id);
      if (play == null) {
        break missingId;
      }

      id = R.id.play2;
      ImageView play2 = ViewBindings.findChildViewById(rootView, id);
      if (play2 == null) {
        break missingId;
      }

      id = R.id.play3;
      ImageView play3 = ViewBindings.findChildViewById(rootView, id);
      if (play3 == null) {
        break missingId;
      }

      id = R.id.providersProfileArea;
      CardView providersProfileArea = ViewBindings.findChildViewById(rootView, id);
      if (providersProfileArea == null) {
        break missingId;
      }

      id = R.id.providersRecycView;
      RecyclerView providersRecycView = ViewBindings.findChildViewById(rootView, id);
      if (providersRecycView == null) {
        break missingId;
      }

      id = R.id.userImage;
      ImageView userImage = ViewBindings.findChildViewById(rootView, id);
      if (userImage == null) {
        break missingId;
      }

      id = R.id.userName;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      id = R.id.usersProfileArea;
      View usersProfileArea = ViewBindings.findChildViewById(rootView, id);
      if (usersProfileArea == null) {
        break missingId;
      }
      GeneralToolbarBinding binding_usersProfileArea = GeneralToolbarBinding.bind(usersProfileArea);

      id = R.id.videoContainer1;
      RelativeLayout videoContainer1 = ViewBindings.findChildViewById(rootView, id);
      if (videoContainer1 == null) {
        break missingId;
      }

      id = R.id.videoContainer2;
      RelativeLayout videoContainer2 = ViewBindings.findChildViewById(rootView, id);
      if (videoContainer2 == null) {
        break missingId;
      }

      id = R.id.videoContainer3;
      RelativeLayout videoContainer3 = ViewBindings.findChildViewById(rootView, id);
      if (videoContainer3 == null) {
        break missingId;
      }

      id = R.id.videoThumbnail1;
      ImageView videoThumbnail1 = ViewBindings.findChildViewById(rootView, id);
      if (videoThumbnail1 == null) {
        break missingId;
      }

      id = R.id.videoThumbnail2;
      ImageView videoThumbnail2 = ViewBindings.findChildViewById(rootView, id);
      if (videoThumbnail2 == null) {
        break missingId;
      }

      id = R.id.videoThumbnail3;
      ImageView videoThumbnail3 = ViewBindings.findChildViewById(rootView, id);
      if (videoThumbnail3 == null) {
        break missingId;
      }

      id = R.id.videoView1;
      VideoView videoView1 = ViewBindings.findChildViewById(rootView, id);
      if (videoView1 == null) {
        break missingId;
      }

      id = R.id.videoView2;
      VideoView videoView2 = ViewBindings.findChildViewById(rootView, id);
      if (videoView2 == null) {
        break missingId;
      }

      id = R.id.videoView3;
      VideoView videoView3 = ViewBindings.findChildViewById(rootView, id);
      if (videoView3 == null) {
        break missingId;
      }

      return new FragmentHomeBinding((LinearLayout) rootView, appointArea, appointSelector,
          mediaArea, mediaSelector, noProviders, play, play2, play3, providersProfileArea,
          providersRecycView, userImage, userName, binding_usersProfileArea, videoContainer1,
          videoContainer2, videoContainer3, videoThumbnail1, videoThumbnail2, videoThumbnail3,
          videoView1, videoView2, videoView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
