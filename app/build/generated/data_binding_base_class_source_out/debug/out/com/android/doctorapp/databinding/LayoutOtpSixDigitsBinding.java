// Generated by view binder compiler. Do not edit!
package com.android.doctorapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.doctorapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutOtpSixDigitsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText etOtp1;

  @NonNull
  public final EditText etOtp2;

  @NonNull
  public final EditText etOtp3;

  @NonNull
  public final EditText etOtp4;

  @NonNull
  public final EditText etOtp5;

  @NonNull
  public final EditText etOtp6;

  @NonNull
  public final LinearLayout llOtp1;

  @NonNull
  public final LinearLayout llOtp2;

  @NonNull
  public final LinearLayout llOtp3;

  @NonNull
  public final LinearLayout llOtp4;

  @NonNull
  public final LinearLayout llOtp5;

  @NonNull
  public final LinearLayout llOtp6;

  @NonNull
  public final LinearLayout otpCodeArea;

  @NonNull
  public final TextView otpHTxt;

  @NonNull
  public final TextView otpTimeTxt;

  @NonNull
  public final LinearLayout rootArea;

  private LayoutOtpSixDigitsBinding(@NonNull LinearLayout rootView, @NonNull EditText etOtp1,
      @NonNull EditText etOtp2, @NonNull EditText etOtp3, @NonNull EditText etOtp4,
      @NonNull EditText etOtp5, @NonNull EditText etOtp6, @NonNull LinearLayout llOtp1,
      @NonNull LinearLayout llOtp2, @NonNull LinearLayout llOtp3, @NonNull LinearLayout llOtp4,
      @NonNull LinearLayout llOtp5, @NonNull LinearLayout llOtp6, @NonNull LinearLayout otpCodeArea,
      @NonNull TextView otpHTxt, @NonNull TextView otpTimeTxt, @NonNull LinearLayout rootArea) {
    this.rootView = rootView;
    this.etOtp1 = etOtp1;
    this.etOtp2 = etOtp2;
    this.etOtp3 = etOtp3;
    this.etOtp4 = etOtp4;
    this.etOtp5 = etOtp5;
    this.etOtp6 = etOtp6;
    this.llOtp1 = llOtp1;
    this.llOtp2 = llOtp2;
    this.llOtp3 = llOtp3;
    this.llOtp4 = llOtp4;
    this.llOtp5 = llOtp5;
    this.llOtp6 = llOtp6;
    this.otpCodeArea = otpCodeArea;
    this.otpHTxt = otpHTxt;
    this.otpTimeTxt = otpTimeTxt;
    this.rootArea = rootArea;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutOtpSixDigitsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutOtpSixDigitsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_otp_six_digits, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutOtpSixDigitsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et_otp1;
      EditText etOtp1 = ViewBindings.findChildViewById(rootView, id);
      if (etOtp1 == null) {
        break missingId;
      }

      id = R.id.et_otp2;
      EditText etOtp2 = ViewBindings.findChildViewById(rootView, id);
      if (etOtp2 == null) {
        break missingId;
      }

      id = R.id.et_otp3;
      EditText etOtp3 = ViewBindings.findChildViewById(rootView, id);
      if (etOtp3 == null) {
        break missingId;
      }

      id = R.id.et_otp4;
      EditText etOtp4 = ViewBindings.findChildViewById(rootView, id);
      if (etOtp4 == null) {
        break missingId;
      }

      id = R.id.et_otp5;
      EditText etOtp5 = ViewBindings.findChildViewById(rootView, id);
      if (etOtp5 == null) {
        break missingId;
      }

      id = R.id.et_otp6;
      EditText etOtp6 = ViewBindings.findChildViewById(rootView, id);
      if (etOtp6 == null) {
        break missingId;
      }

      id = R.id.ll_otp1;
      LinearLayout llOtp1 = ViewBindings.findChildViewById(rootView, id);
      if (llOtp1 == null) {
        break missingId;
      }

      id = R.id.ll_otp2;
      LinearLayout llOtp2 = ViewBindings.findChildViewById(rootView, id);
      if (llOtp2 == null) {
        break missingId;
      }

      id = R.id.ll_otp3;
      LinearLayout llOtp3 = ViewBindings.findChildViewById(rootView, id);
      if (llOtp3 == null) {
        break missingId;
      }

      id = R.id.ll_otp4;
      LinearLayout llOtp4 = ViewBindings.findChildViewById(rootView, id);
      if (llOtp4 == null) {
        break missingId;
      }

      id = R.id.ll_otp5;
      LinearLayout llOtp5 = ViewBindings.findChildViewById(rootView, id);
      if (llOtp5 == null) {
        break missingId;
      }

      id = R.id.ll_otp6;
      LinearLayout llOtp6 = ViewBindings.findChildViewById(rootView, id);
      if (llOtp6 == null) {
        break missingId;
      }

      id = R.id.otpCodeArea;
      LinearLayout otpCodeArea = ViewBindings.findChildViewById(rootView, id);
      if (otpCodeArea == null) {
        break missingId;
      }

      id = R.id.otpHTxt;
      TextView otpHTxt = ViewBindings.findChildViewById(rootView, id);
      if (otpHTxt == null) {
        break missingId;
      }

      id = R.id.otpTimeTxt;
      TextView otpTimeTxt = ViewBindings.findChildViewById(rootView, id);
      if (otpTimeTxt == null) {
        break missingId;
      }

      LinearLayout rootArea = (LinearLayout) rootView;

      return new LayoutOtpSixDigitsBinding((LinearLayout) rootView, etOtp1, etOtp2, etOtp3, etOtp4,
          etOtp5, etOtp6, llOtp1, llOtp2, llOtp3, llOtp4, llOtp5, llOtp6, otpCodeArea, otpHTxt,
          otpTimeTxt, rootArea);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
