// Generated by view binder compiler. Do not edit!
package com.android.doctorapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.doctorapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutBookingsItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView call;

  @NonNull
  public final ImageView callArea;

  @NonNull
  public final ImageView chatArea;

  @NonNull
  public final ImageView image;

  @NonNull
  public final TextView module;

  @NonNull
  public final TextView name;

  @NonNull
  public final LinearLayout rootLayArea;

  @NonNull
  public final TextView specializ;

  @NonNull
  public final TextView time;

  private LayoutBookingsItemBinding(@NonNull LinearLayout rootView, @NonNull CardView call,
      @NonNull ImageView callArea, @NonNull ImageView chatArea, @NonNull ImageView image,
      @NonNull TextView module, @NonNull TextView name, @NonNull LinearLayout rootLayArea,
      @NonNull TextView specializ, @NonNull TextView time) {
    this.rootView = rootView;
    this.call = call;
    this.callArea = callArea;
    this.chatArea = chatArea;
    this.image = image;
    this.module = module;
    this.name = name;
    this.rootLayArea = rootLayArea;
    this.specializ = specializ;
    this.time = time;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutBookingsItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutBookingsItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_bookings_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutBookingsItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.call;
      CardView call = ViewBindings.findChildViewById(rootView, id);
      if (call == null) {
        break missingId;
      }

      id = R.id.callArea;
      ImageView callArea = ViewBindings.findChildViewById(rootView, id);
      if (callArea == null) {
        break missingId;
      }

      id = R.id.chatArea;
      ImageView chatArea = ViewBindings.findChildViewById(rootView, id);
      if (chatArea == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.module;
      TextView module = ViewBindings.findChildViewById(rootView, id);
      if (module == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.rootLayArea;
      LinearLayout rootLayArea = ViewBindings.findChildViewById(rootView, id);
      if (rootLayArea == null) {
        break missingId;
      }

      id = R.id.specializ;
      TextView specializ = ViewBindings.findChildViewById(rootView, id);
      if (specializ == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      return new LayoutBookingsItemBinding((LinearLayout) rootView, call, callArea, chatArea, image,
          module, name, rootLayArea, specializ, time);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
