// Generated by view binder compiler. Do not edit!
package com.android.doctorapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.doctorapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout bookingsArea;

  @NonNull
  public final RelativeLayout changePassArea;

  @NonNull
  public final RelativeLayout logoutRlArea;

  @NonNull
  public final RelativeLayout personDetailsArea;

  @NonNull
  public final NestedScrollView scroll;

  @NonNull
  public final RelativeLayout verifyMobArea;

  private FragmentProfileBinding(@NonNull LinearLayout rootView,
      @NonNull RelativeLayout bookingsArea, @NonNull RelativeLayout changePassArea,
      @NonNull RelativeLayout logoutRlArea, @NonNull RelativeLayout personDetailsArea,
      @NonNull NestedScrollView scroll, @NonNull RelativeLayout verifyMobArea) {
    this.rootView = rootView;
    this.bookingsArea = bookingsArea;
    this.changePassArea = changePassArea;
    this.logoutRlArea = logoutRlArea;
    this.personDetailsArea = personDetailsArea;
    this.scroll = scroll;
    this.verifyMobArea = verifyMobArea;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bookingsArea;
      RelativeLayout bookingsArea = ViewBindings.findChildViewById(rootView, id);
      if (bookingsArea == null) {
        break missingId;
      }

      id = R.id.changePassArea;
      RelativeLayout changePassArea = ViewBindings.findChildViewById(rootView, id);
      if (changePassArea == null) {
        break missingId;
      }

      id = R.id.logoutRlArea;
      RelativeLayout logoutRlArea = ViewBindings.findChildViewById(rootView, id);
      if (logoutRlArea == null) {
        break missingId;
      }

      id = R.id.personDetailsArea;
      RelativeLayout personDetailsArea = ViewBindings.findChildViewById(rootView, id);
      if (personDetailsArea == null) {
        break missingId;
      }

      id = R.id.scroll;
      NestedScrollView scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.verifyMobArea;
      RelativeLayout verifyMobArea = ViewBindings.findChildViewById(rootView, id);
      if (verifyMobArea == null) {
        break missingId;
      }

      return new FragmentProfileBinding((LinearLayout) rootView, bookingsArea, changePassArea,
          logoutRlArea, personDetailsArea, scroll, verifyMobArea);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
