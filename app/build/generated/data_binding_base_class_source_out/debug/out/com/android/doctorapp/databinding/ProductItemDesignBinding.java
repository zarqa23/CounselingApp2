// Generated by view binder compiler. Do not edit!
package com.android.doctorapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.doctorapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProductItemDesignBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView charges;

  @NonNull
  public final ImageView chatArea;

  @NonNull
  public final ImageView image;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView qualif;

  @NonNull
  public final LinearLayout rootLayArea;

  @NonNull
  public final TextView specializ;

  private ProductItemDesignBinding(@NonNull LinearLayout rootView, @NonNull TextView charges,
      @NonNull ImageView chatArea, @NonNull ImageView image, @NonNull TextView name,
      @NonNull TextView qualif, @NonNull LinearLayout rootLayArea, @NonNull TextView specializ) {
    this.rootView = rootView;
    this.charges = charges;
    this.chatArea = chatArea;
    this.image = image;
    this.name = name;
    this.qualif = qualif;
    this.rootLayArea = rootLayArea;
    this.specializ = specializ;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProductItemDesignBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProductItemDesignBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.product_item_design, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProductItemDesignBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.charges;
      TextView charges = ViewBindings.findChildViewById(rootView, id);
      if (charges == null) {
        break missingId;
      }

      id = R.id.chatArea;
      ImageView chatArea = ViewBindings.findChildViewById(rootView, id);
      if (chatArea == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.qualif;
      TextView qualif = ViewBindings.findChildViewById(rootView, id);
      if (qualif == null) {
        break missingId;
      }

      id = R.id.rootLayArea;
      LinearLayout rootLayArea = ViewBindings.findChildViewById(rootView, id);
      if (rootLayArea == null) {
        break missingId;
      }

      id = R.id.specializ;
      TextView specializ = ViewBindings.findChildViewById(rootView, id);
      if (specializ == null) {
        break missingId;
      }

      return new ProductItemDesignBinding((LinearLayout) rootView, charges, chatArea, image, name,
          qualif, rootLayArea, specializ);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
